name: Check against Conventional Commits, test, and build

on:
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: "0 7 * * *" # 12:00am PDT
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test-commit:
    name: Test against Conventional Commits
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - uses: webiny/action-conventional-commits@v1.3.0

  test-code:
    name: Run pytest test cases
    needs:
      - test-commit
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test with pytest
      run: |
        echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
        echo "MAIL_FROM=${{ secrets.MAIL_FROM }}" >> .env
        echo "MAIL_FROM_NAME=${{ secrets.MAIL_FROM_NAME }}" >> .env
        echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env
        echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env
        echo "MAIL_SERVER=${{ secrets.MAIL_SERVER }}" >> .env
        echo "MAIL_PORT=${{ secrets.MAIL_PORT }}" >> .env
        echo "DOMAIN=" >> .env
        echo "JWT_ALGORITHM=" >> .env
        echo "JWT_SECRET=" >> .env
        pytest

  build:
    name: Build the Docker image
    needs:
      - test-code
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag cs486-assignment7-edwardshturman:$(date +%s)
